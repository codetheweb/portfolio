@use 'variables';

html,
body {
  padding: 0;
  margin: 0;
  background-color: variables.$white;
  color: variables.$black;
  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,
    Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  transition-duration: variables.$theme-transition-duration;
  min-height: 100vh;
}

html[data-theme='dark'], html[data-theme='dark'] body {
  background-color: variables.$black;
  color: variables.$white;
}

// TODO: figure out correct stacking / positioning order so this can live in wave.module.scss instead.
html body {
  &:before {
    content: '';
    position: fixed;
    background-color: mix(variables.$white, variables.$primary-accent, 15%);
    height: 100vh;
    top: -50vh;
    left: 0;
    right: 0;
    z-index: -1;
  }
}

html[data-theme='dark'] body {
  &:before {
    background-color: rgba(variables.$primary-accent, 0.05);
  }
}

a {
  color: inherit;
  text-decoration: none;
}

* {
  box-sizing: border-box;
}

p, blockquote, ul {
  max-width: 65ch;
  line-height: 1.5;
}

h2 {
  font-size: 180%;
}

blockquote {
  margin-left: 0;
  border-left: 3px solid variables.$primary-accent;
  padding-left: 1rem;
}

hr {
  border: 0;
  border-top: 1px solid variables.$primary-accent;
  margin: 2rem 0;
}

*:not(.disable-default-code-styles) > {
  code {
    background-color: variables.$black;
    color: variables.$white;
    transition-property: background-color, color;
    transition-duration: variables.$transition-duration;
    border-radius: calc(variables.$radius / 2);
    padding: 0.1rem 0.2rem;
    white-space: nowrap;
  }
}

html[data-theme='dark'] {
  *:not(.disable-default-code-styles) > {
    code {
      background-color: variables.$white;
      color: variables.$black;
    }
  }
}
